{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundary.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","width","height","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAmBeA,EAjBF,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,KAAKC,EAAU,EAAVA,MAEtB,OAEC,sBAAKC,UAAU,iDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,GAAMM,MAAM,MAAMC,OAAO,QACxE,gCACC,6BAAKN,IACL,4BAAIC,WC2BOM,EAlCE,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAQnB,OAGC,8BAGIA,EAAOC,KAAI,SAACC,EAAKC,GAEjB,OACC,cAAC,EAAD,CAEAZ,GAAIW,EAAKX,GACTC,KAAMU,EAAKV,KACXC,MAAOS,EAAKT,OAHNU,SCIGC,EAvBG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAEnB,OAEC,qBAAKX,UAAU,MAAf,SAEA,uBACCA,UAAU,oCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCGEI,G,MAbA,SAACC,GAEf,OAEC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAmBf,OAAO,SAAnE,SACEY,EAAMI,aCoBKC,E,kDAvBd,WAAYL,GAAO,IAAD,8BAEjB,cAAMA,IACDM,MAAQ,CACZC,UAAU,GAJM,E,qDAQlB,SAAkBC,EAAOC,GAExBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG3B,WAEC,OAAGG,KAAKJ,MAAMC,SAEN,2DAEIG,KAAKV,MAAMI,a,GArBGQ,aCqFbC,E,kDA3Ed,aAAc,IAAD,8BAEZ,gBAsBDC,eAAgB,SAACC,GAEhB,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAvBzC,EAAKZ,MAAO,CACVhB,OAAQ,GACR0B,YAAa,IALH,E,qDAUb,WAAoB,IAAD,OAElBG,MAAM,8CAA8CC,MAAK,SAAAC,GAExD,OAAOA,EAASC,UACdF,MAAK,SAAAG,GAIP,EAAKZ,SAAS,CAACrB,OAAQiC,S,oBAgBzB,WAAS,IAAD,OAEDC,EAAiBd,KAAKJ,MAAMhB,OAAOmC,QAAO,SAAAC,GAE/C,OAAOA,EAAM5C,KAAK6C,cAAcC,SAAS,EAAKtB,MAAMU,YAAYW,kBAGjE,OAAgC,IAA7BjB,KAAKJ,MAAMhB,OAAOuC,OAEZ,oBAAI7C,UAAU,KAAd,2BAKP,sBAAKA,UAAU,KAAf,UAEC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUxB,OAAQkC,e,GAzDPZ,aCEHkB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UAGG,cAAC,EAAD,MAEHC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8755b708.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({id,name,email}) =>{\r\n\r\n\treturn(\r\n\r\n\t\t<div className='tc bg-light-blue dib br3 ma2 grow bw2 shadow-5'>\r\n\t\t <img alt=\"Robots\" src={`https://robohash.org/${id}`} width='300' height='300'/>\r\n\t\t <div>\r\n\t\t \t<h2>{name}</h2>\r\n\t\t \t<p>{email}</p>\r\n\t\t </div>\r\n\r\n\t\t</div>\r\n\r\n\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots})=>{\r\n\r\n    // if(true){\r\n    //     throw new Error('Noooo')\r\n    // }\r\n\r\n// const cardArray={Robots};\r\n\r\nreturn(\r\n\r\n\r\n\t<div>\r\n\t{\r\n\r\n     robots.map((user,i)=>{\r\n\r\n     return(\r\n     \t<Card \r\n     \tkey ={i}\r\n     \tid={user.id} \r\n     \tname={user.name} \r\n     \temail={user.email} \r\n     \t/>\r\n     );\r\n\r\n    })\r\n\r\n \t}\r\n\r\n     </div>\r\n\t);\r\n\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) =>{\r\n\r\n\treturn(\r\n\r\n\t\t<div className='pa2'>\r\n\r\n\t\t<input \r\n\t\t\tclassName='pa3 ba b---green bg-lightest-blue' \r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='search robots' \r\n\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\r\n\t\t</div>\r\n\r\n\t\t)\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n\r\n\treturn(\r\n\r\n\t\t<div style={{overflowY: 'scroll', border:'5px solid black', height:'800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\r\n\t\t)\r\n\r\n\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n\r\n\tconstructor(props){\r\n\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info){\r\n\r\n\t\tthis.setState({ hasError: true})\r\n\t}\r\n\r\n\trender(){\r\n\r\n\t\tif(this.state.hasError){\r\n\r\n\t\t\treturn <h1> Ooops. Server is down...</h1>\r\n\t\t}\r\n\t\telse return this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;","import React,{Component} from 'react';\r\n//import {robots} from './robots';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/SearchBox'\r\nimport './App.css'\r\nimport Scroll from '../Components/Scroll';\r\nimport ErrorBoundary from '../Components/ErrorBoundary';\r\n\r\n\r\n\r\nclass App extends Component{\r\n\r\n\tconstructor(){\r\n\r\n\t\tsuper()\r\n\t\tthis.state ={\r\n\t\t\t\trobots: [],\r\n\t\t\t\tsearchfield: ''\r\n\t\t\t\t}\r\n\t\t}\r\n\r\n\r\n\tcomponentDidMount(){\r\n\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users').then(response =>{\r\n\r\n\t\t\treturn response.json();\r\n\t\t}).then(users =>{\r\n\r\n\t\t\t// return [];\r\n\r\n\t\t\tthis.setState({robots: users})\r\n\r\n\t\t}) \r\n\t}\r\n\r\n\tonSearchChange= (event) =>{\r\n\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\r\n\t\t\r\n\r\n\t\t//console.log(filteredRobots);\r\n\r\n\r\n\t}\r\n\r\n\trender(){\r\n\r\n\t\tconst filteredRobots = this.state.robots.filter(robot =>{\r\n\r\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t})\r\n\r\n\t\tif(this.state.robots.length === 0)\r\n\t\t\t{\r\n\t\t\t\treturn <h1 className='tc'>Loading......</h1>\r\n\t\t\t}\r\n\t\telse{\r\n\t\t\treturn(\r\n\r\n\t\t\t\t<div className='tc'>\r\n\r\n\t\t\t\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t);\r\n\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n//import {robots} from './robots';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/*<Card id={robots[0].id} name={robots[0].name} email={robots[0].email} />*/}\n\n    {<App/>}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}